{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class MyValidatorsService {\n  constructor() {}\n  getValidatorErrorMessage(fieldName, error) {\n    if (error['required']) {\n      return fieldName + \" is required\";\n    } else if (error['minlength']) {\n      return fieldName + \" should hava at least \" + error['minlength']['requiredLength'] + \"Characters\";\n    } else if (error['min']) {\n      return fieldName + \" should have min value \" + error['min']['min'];\n    } else if (error['email']) {\n      return fieldName + \" should have \";\n    } else return \"\";\n  }\n}\nMyValidatorsService.ɵfac = function MyValidatorsService_Factory(t) {\n  return new (t || MyValidatorsService)();\n};\nMyValidatorsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MyValidatorsService,\n  factory: MyValidatorsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,mBAAmB;EAE9BC,eAAgB;EAETC,wBAAwB,CAACC,SAAgB,EAAEC,KAAsB;IACtE,IAAIA,KAAK,CAAC,UAAU,CAAC,EAAE;MACrB,OAAOD,SAAS,GAAG,cAAc;KAClC,MAAK,IAAIC,KAAK,CAAC,WAAW,CAAC,EAAE;MAC5B,OAAOD,SAAS,GAAG,wBAAwB,GAAGC,KAAK,CAAC,WAAW,CAAC,CAAC,gBAAgB,CAAC,GAAG,YAAY;KAClG,MAAK,IAAIA,KAAK,CAAC,KAAK,CAAC,EAAE;MACtB,OAAOD,SAAS,GAAG,yBAAyB,GAAGC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;KACnE,MAAK,IAAIA,KAAK,CAAC,OAAO,CAAC,EAAE;MACxB,OAAOD,SAAS,GAAG,eAAe;KACnC,MAAK,OAAO,EAAE;EACjB;;AAdWH,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAK,SAAnBL,mBAAmB;EAAAM,YAFlB;AAAM","names":["MyValidatorsService","constructor","getValidatorErrorMessage","fieldName","error","factory","providedIn"],"sourceRoot":"","sources":["D:\\ESIG GLOBAL SUCCESS - PARCOURS\\ESIG LICENCE 2 - Génie Logiciel\\ESIG Licence 2 - SEMESTRE 4\\Licence 2 - Complement Web\\TRAVAIL DE M. AGBO - COMPLEMENT DEVELOPPEMENT\\FreshFoodsOnline\\src\\app\\services\\my-validators.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ValidationErrors } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyValidatorsService {\n\n  constructor() { }\n\n  public getValidatorErrorMessage(fieldName:string, error:ValidationErrors){\n    if (error['required']) {\n      return fieldName + \" is required\";\n    }else if (error['minlength']) {\n      return fieldName + \" should hava at least \" + error['minlength']['requiredLength'] + \"Characters\";\n    }else if (error['min']) {\n      return fieldName + \" should have min value \" + error['min']['min'];\n    }else if (error['email']) {\n      return fieldName + \" should have \";\n    }else return \"\";\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}