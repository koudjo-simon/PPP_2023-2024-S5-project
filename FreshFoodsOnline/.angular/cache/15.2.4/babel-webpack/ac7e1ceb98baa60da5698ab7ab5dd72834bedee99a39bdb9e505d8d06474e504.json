{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet FoodListComponent = class FoodListComponent {\n  constructor(foodService, router, authService) {\n    this.foodService = foodService;\n    this.router = router;\n    this.authService = authService;\n    this.foods = [];\n    this._searchKeyword = \"\";\n    this.searchFoods = [];\n  }\n  ngOnInit() {\n    this.authService.getAuthenticatedUser().subscribe({\n      next: user => this.authAdmin = user,\n      error: err => console.log(err)\n    });\n    this.foodService.getAll().subscribe({\n      next: fds => {\n        this.foods = fds;\n        this.searchFoods = this.foods;\n        console.log(this.foods);\n      },\n      error: err => {\n        console.error(err);\n        this.errorMessage = err;\n      }\n    });\n  }\n  get searchKeyword() {\n    return this._searchKeyword;\n  }\n  set searchKeyword(keyword) {\n    this._searchKeyword = keyword;\n    this.searchFoods = this.searchKeyword ? this.filterFoods(this.searchKeyword) : this.foods;\n  }\n  filterFoods(criteria) {\n    criteria = criteria.toLowerCase();\n    const res = this.foods.filter(food => food.name.toLowerCase().indexOf(criteria) != -1);\n    return res;\n  }\n  handleDeleteFood(f) {\n    let conf = confirm(\"Are you sure that you want to delete food \" + f.name + \" ?\");\n    if (conf == false) return;\n    this.foodService.deleteProductById(f.id).subscribe({\n      next: data => {\n        let index = this.foods.indexOf(f);\n        this.foods.splice(index, 1);\n      }\n    });\n  }\n  handleEditFood(f) {\n    if (this.authAdmin != undefined) {\n      let url = \"/admin/\" + this.authAdmin.username + \"/food/\" + \"edit/\" + f.id;\n      this.router.navigateByUrl(url);\n    }\n  }\n};\nFoodListComponent = __decorate([Component({\n  selector: 'app-food-list',\n  templateUrl: './food-list.component.html',\n  styleUrls: ['./food-list.component.scss']\n})], FoodListComponent);\nexport { FoodListComponent };","map":{"version":3,"mappings":"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","names":["Component","FoodListComponent","constructor","foodService","router","authService","ngOnInit","getAuthenticatedUser","subscribe","next","user","authAdmin","error","err","console","log","getAll","fds","foods","searchFoods","errorMessage","searchKeyword","_searchKeyword","keyword","filterFoods","criteria","toLowerCase","res","filter","food","name","indexOf","handleDeleteFood","f","conf","confirm","deleteProductById","id","data","index","splice","handleEditFood","undefined","url","username","navigateByUrl","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\ESIG GLOBAL SUCCESS - PARCOURS\\ESIG LICENCE 2 - GÃ©nie Logiciel\\ESIG Licence 2 - SEMESTRE 4\\Licence 2 - Complement Web\\TRAVAIL DE M. AGBO - COMPLEMENT DEVELOPPEMENT\\FreshFoodsOnline\\src\\app\\module-admin\\food-list\\food-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FoodService } from 'src/app/services/food.service';\nimport { Foods } from 'src/app/shared/model/food';\nimport { Admin } from '../admin-model/admin';\nimport { AuthenticationService } from '../admin-services/authentication/authentication.service';\n\n@Component({\n  selector: 'app-food-list',\n  templateUrl: './food-list.component.html',\n  styleUrls: ['./food-list.component.scss']\n})\nexport class FoodListComponent implements OnInit{\n\n  public authAdmin!: Admin;\n  public foods: Foods[] = [];\n  public errorMessage!: string;\n  private _searchKeyword: string = \"\";\n  public searchFoods: Foods[] = [];\n\n  constructor(private foodService: FoodService,\n    private router: Router,\n    private authService: AuthenticationService){}\n\n  ngOnInit(): void {\n    this.authService.getAuthenticatedUser().subscribe({\n      next: user => this.authAdmin = user,\n      error: err => console.log(err)\n    });\n\n    this.foodService.getAll().subscribe({\n      next: (fds) => {\n        this.foods = fds;\n        this.searchFoods = this.foods;\n        console.log(this.foods);\n      },\n      error: err => {\n        console.error(err);\n        this.errorMessage = err;\n      }\n    });\n  }\n\n  public get searchKeyword(): string{\n    return this._searchKeyword;\n  }\n\n  public set searchKeyword(keyword: string){\n    this._searchKeyword = keyword;\n    this.searchFoods = this.searchKeyword ? this.filterFoods(this.searchKeyword) : this.foods;\n  }\n\n  private filterFoods(criteria: string): Foods[]{\n    criteria = criteria.toLowerCase();\n    const res = this.foods.filter(\n      (food: Foods) => food.name.toLowerCase().indexOf(criteria) != -1\n    );\n    return res;\n  }\n\n  handleDeleteFood(f: Foods){\n    let conf = confirm(\"Are you sure that you want to delete food \"+f.name+\" ?\");\n    if (conf == false) return; \n    this.foodService.deleteProductById(f.id).subscribe({\n      next : data => {\n        let index = this.foods.indexOf(f);\n        this.foods.splice(index, 1);\n      }\n    });\n  }\n\n  handleEditFood(f: Foods){\n    if (this.authAdmin != undefined) {\n      let url = \"/admin/\"+ this.authAdmin.username + \"/food/\"+ \"edit/\" + f.id;\n      this.router.navigateByUrl(url);\n    }\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}