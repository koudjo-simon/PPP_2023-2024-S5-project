{"ast":null,"code":"import { of, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cardFoodsList = [];\n  }\n  addToCart(sfood) {\n    this.cardFoodsList.push(sfood);\n  }\n  getCartFoods() {\n    if (this.cardFoodsList.length > 0) {\n      return of(this.cardFoodsList);\n    } else {\n      return throwError(() => new Error(\"Food untifined in the cart list.\"));\n    }\n  }\n  deleteFoodById(id) {\n    this.cardFoodsList = this.cardFoodsList;\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)();\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,EAAE,EAAEC,UAAU,QAAQ,MAAM;;AAKjD,OAAM,MAAOC,WAAW;EAItBC;IAFQ,kBAAa,GAAa,EAAE;EAIpC;EAEOC,SAAS,CAACC,KAAa;IAC5B,IAAI,CAACC,aAAa,CAACC,IAAI,CAACF,KAAK,CAAC;EAChC;EAEOG,YAAY;IACjB,IAAI,IAAI,CAACF,aAAa,CAACG,MAAM,GAAG,CAAC,EAAE;MACjC,OAAOT,EAAE,CAAC,IAAI,CAACM,aAAa,CAAC;KAC9B,MAAK;MACJ,OAAOL,UAAU,CAAC,MAAM,IAAIS,KAAK,CAAC,kCAAkC,CAAC,CAAC;;EAE1E;EAEOC,cAAc,CAACC,EAAU;IAC9B,IAAI,CAACN,aAAa,GAAG,IAAI,CAACA,aAAa;EACzC;;AAtBWJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAW,SAAXX,WAAW;EAAAY,YAFV;AAAM","names":["of","throwError","CartService","constructor","addToCart","sfood","cardFoodsList","push","getCartFoods","length","Error","deleteFoodById","id","factory","providedIn"],"sourceRoot":"","sources":["D:\\ESIG GLOBAL SUCCESS - PARCOURS\\ESIG LICENCE 2 - Génie Logiciel\\ESIG Licence 2 - SEMESTRE 4\\Licence 2 - Complement Web\\TRAVAIL DE M. AGBO - COMPLEMENT DEVELOPPEMENT\\FreshFoodsOnline\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ISFood } from '../shared/model/ISFood';\nimport { Observable, of, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  private cardFoodsList: ISFood[] = [];\n\n  constructor() {\n    \n  }\n\n  public addToCart(sfood: ISFood): void {\n    this.cardFoodsList.push(sfood);\n  }\n\n  public getCartFoods(): Observable<ISFood[]>{\n    if (this.cardFoodsList.length > 0) {\n      return of(this.cardFoodsList);\n    }else {\n      return throwError(() => new Error(\"Food untifined in the cart list.\"));\n    }\n  }\n\n  public deleteFoodById(id: number): void{\n    this.cardFoodsList = this.cardFoodsList\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}