{"ast":null,"code":"import { environment } from \"../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n  }\n  addImage(formData) {\n    return this.http.post(this.apiUrl + \"/uploadFile\", formData);\n  }\n  addProduct(categoryId, name, price, description, imageUrl, stockQte, productStatus) {\n    let product = {\n      name,\n      price,\n      description,\n      imageUrl,\n      stockQte,\n      productStatus\n    };\n    return this.http.post(this.apiUrl + \"/product/add?categoryId=\" + categoryId, product);\n  }\n  getPoducts() {\n    return this.http.get(this.apiUrl + \"/product/list\");\n  }\n  getProductById(productid) {\n    return this.http.get(this.apiUrl + \"/product/\" + productid);\n  }\n  updateProduct(productId, categoryId, name, price, description, imageUrl, stockQte, productStatus) {\n    let product = {};\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAQA,WAAW,QAAO,mCAAmC;;;AAK7D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,WAAM,GAAGH,WAAW,CAACI,MAAM;EAEa;EAExCC,QAAQ,CAACC,QAAkB;IACzB,OAAQ,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,MAAM,GAAG,aAAa,EAAEE,QAAQ,CAAC;EAC/D;EAEAE,UAAU,CAACC,UAAkB,EAAEC,IAAY,EAAEC,KAAa,EAAEC,WAAmB,EAAEC,QAAgB,EAAEC,QAAgB,EAAEC,aAAqB;IACxI,IAAIC,OAAO,GAAG;MACZN,IAAI;MACJC,KAAK;MACLC,WAAW;MACXC,QAAQ;MACRC,QAAQ;MACRC;KACD;IACD,OAAO,IAAI,CAACZ,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,MAAM,GAAG,0BAA0B,GAACK,UAAU,EAAEO,OAAO,CAAC;EACrF;EAEAC,UAAU;IACR,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAC,IAAI,CAACd,MAAM,GAAG,eAAe,CAAC;EACrD;EAEAe,cAAc,CAACC,SAAiB;IAC9B,OAAO,IAAI,CAACjB,IAAI,CAACe,GAAG,CAAC,IAAI,CAACd,MAAM,GAAG,WAAW,GAACgB,SAAS,CAAC;EAC3D;EAEAC,aAAa,CAACC,SAAiB,EAAEb,UAAkB,EAAEC,IAAY,EAAEC,KAAa,EAAEC,WAAmB,EAAEC,QAAgB,EAAEC,QAAgB,EAAEC,aAAqB;IAC9J,IAAIC,OAAO,GAAG,EAEb;EACH;;AAlCWf,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAsB,SAAdtB,cAAc;EAAAuB,YAFb;AAAM","names":["environment","ProductService","constructor","http","apiUrl","addImage","formData","post","addProduct","categoryId","name","price","description","imageUrl","stockQte","productStatus","product","getPoducts","get","getProductById","productid","updateProduct","productId","factory","providedIn"],"sourceRoot":"","sources":["D:\\PROJETS\\PPP - 2023_2024\\FreshFoodsOnline\\src\\app\\module-admin\\admin-services\\product.service.ts"],"sourcesContent":["import {Injectable, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  addImage(formData: FormData): Observable<any>{\n    return  this.http.post(this.apiUrl + \"/uploadFile\", formData);\n  }\n\n  addProduct(categoryId: number, name: string, price: number, description: string, imageUrl: string, stockQte: number, productStatus: string){\n    let product = {\n      name,\n      price,\n      description,\n      imageUrl,\n      stockQte,\n      productStatus\n    }\n    return this.http.post(this.apiUrl + \"/product/add?categoryId=\"+categoryId, product);\n  }\n\n  getPoducts(){\n    return this.http.get(this.apiUrl + \"/product/list\");\n  }\n\n  getProductById(productid: number){\n    return this.http.get(this.apiUrl + \"/product/\"+productid);\n  }\n\n  updateProduct(productId: number, categoryId: number, name: string, price: number, description: string, imageUrl: string, stockQte: number, productStatus: string){\n    let product = {\n      \n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}