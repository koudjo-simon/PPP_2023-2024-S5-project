{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/cart.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../services/command.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"src/app/services/my-validators.service\";\nimport * as i6 from \"@angular/common\";\nfunction CommandComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"br\");\n    i0.ɵɵelementStart(1, \"div\", 2)(2, \"div\", 3)(3, \"h3\");\n    i0.ɵɵtext(4, \"WARNING\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"h4\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nfunction CommandComponent_div_2_div_8_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cmdLines_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", cmdLines_r13.product.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", cmdLines_r13.quantity, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", cmdLines_r13.totalCommandLinePrice, \" FCFA\");\n  }\n}\nfunction CommandComponent_div_2_div_8_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"h5\");\n    i0.ɵɵtext(3, \"Total Price\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"h5\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r12.totalPrice);\n  }\n}\nfunction CommandComponent_div_2_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"h6\");\n    i0.ɵɵtext(3, \"Your Command List\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 4)(5, \"table\", 29)(6, \"thead\")(7, \"tr\")(8, \"th\");\n    i0.ɵɵtext(9, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Quatity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Total Price\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, CommandComponent_div_2_div_8_tr_15_Template, 7, 3, \"tr\", 30);\n    i0.ɵɵelement(16, \"br\");\n    i0.ɵɵtemplate(17, CommandComponent_div_2_div_8_tr_17_Template, 7, 1, \"tr\", 31);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.commandLines);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.commandLines);\n  }\n}\nfunction CommandComponent_div_2_small_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.myValService.getValidatorErrorMessage(\"F. Name\", ctx_r4.commandFormGroup.controls[\"firstname\"].errors), \" \");\n  }\n}\nfunction CommandComponent_div_2_small_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.myValService.getValidatorErrorMessage(\"L. Name\", ctx_r5.commandFormGroup.controls[\"lastname\"].errors), \" \");\n  }\n}\nfunction CommandComponent_div_2_small_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.myValService.getValidatorErrorMessage(\"Bith date\", ctx_r6.commandFormGroup.controls[\"bithdate\"].errors), \" \");\n  }\n}\nfunction CommandComponent_div_2_small_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.myValService.getValidatorErrorMessage(\"Email\", ctx_r7.commandFormGroup.controls[\"email\"].errors), \" \");\n  }\n}\nfunction CommandComponent_div_2_small_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.myValService.getValidatorErrorMessage(\"Country\", ctx_r8.commandFormGroup.controls[\"country\"].errors), \" \");\n  }\n}\nfunction CommandComponent_div_2_small_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.myValService.getValidatorErrorMessage(\"Region\", ctx_r9.commandFormGroup.controls[\"region\"].errors), \" \");\n  }\n}\nfunction CommandComponent_div_2_small_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.myValService.getValidatorErrorMessage(\"Address\", ctx_r10.commandFormGroup.controls[\"address\"].errors), \" \");\n  }\n}\nfunction CommandComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 3)(2, \"h5\");\n    i0.ɵɵtext(3, \"COMPLETE YOUR COMMAND\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 7)(5, \"div\", 8)(6, \"div\", 9)(7, \"div\");\n    i0.ɵɵtemplate(8, CommandComponent_div_2_div_8_Template, 18, 2, \"div\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 9)(10, \"div\")(11, \"div\", 2)(12, \"div\", 3)(13, \"h6\");\n    i0.ɵɵtext(14, \"Please complete this form !\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 4)(16, \"form\", 11);\n    i0.ɵɵlistener(\"ngSubmit\", function CommandComponent_div_2_Template_form_ngSubmit_16_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.handleCommandClicked());\n    });\n    i0.ɵɵelementStart(17, \"div\", 12)(18, \"label\", 13);\n    i0.ɵɵtext(19, \"F. Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 14);\n    i0.ɵɵtemplate(21, CommandComponent_div_2_small_21_Template, 2, 1, \"small\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 12)(23, \"label\", 16);\n    i0.ɵɵtext(24, \"L. Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"input\", 17);\n    i0.ɵɵtemplate(26, CommandComponent_div_2_small_26_Template, 2, 1, \"small\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 12)(28, \"label\", 18);\n    i0.ɵɵtext(29, \"Bith date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"input\", 19);\n    i0.ɵɵtemplate(31, CommandComponent_div_2_small_31_Template, 2, 1, \"small\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"div\", 12)(33, \"label\", 20);\n    i0.ɵɵtext(34, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(35, \"input\", 21);\n    i0.ɵɵtemplate(36, CommandComponent_div_2_small_36_Template, 2, 1, \"small\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"div\", 12)(38, \"label\", 22);\n    i0.ɵɵtext(39, \"Country\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(40, \"input\", 23);\n    i0.ɵɵtemplate(41, CommandComponent_div_2_small_41_Template, 2, 1, \"small\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"div\", 12)(43, \"label\", 24);\n    i0.ɵɵtext(44, \"Region\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(45, \"input\", 25);\n    i0.ɵɵtemplate(46, CommandComponent_div_2_small_46_Template, 2, 1, \"small\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(47, \"div\", 12)(48, \"label\", 26);\n    i0.ɵɵtext(49, \"Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(50, \"input\", 27);\n    i0.ɵɵtemplate(51, CommandComponent_div_2_small_51_Template, 2, 1, \"small\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"button\", 28)(53, \"strong\");\n    i0.ɵɵtext(54, \"COMMAND\");\n    i0.ɵɵelementEnd()()()()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.commandLines);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.commandFormGroup);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.commandFormGroup.controls[\"firstname\"].errors && ctx_r2.commandFormGroup.controls[\"firstname\"].touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.commandFormGroup.controls[\"lastname\"].errors && ctx_r2.commandFormGroup.controls[\"lastname\"].touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.commandFormGroup.controls[\"bithdate\"].errors && ctx_r2.commandFormGroup.controls[\"bithdate\"].touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.commandFormGroup.controls[\"email\"].errors && ctx_r2.commandFormGroup.controls[\"email\"].touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.commandFormGroup.controls[\"country\"].errors && ctx_r2.commandFormGroup.controls[\"country\"].touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.commandFormGroup.controls[\"region\"].errors && ctx_r2.commandFormGroup.controls[\"region\"].touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.commandFormGroup.controls[\"address\"].errors && ctx_r2.commandFormGroup.controls[\"address\"].touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.commandFormGroup.valid);\n  }\n}\nexport class CommandComponent {\n  constructor(cartService, fb, cmdService, router, myValService) {\n    this.cartService = cartService;\n    this.fb = fb;\n    this.cmdService = cmdService;\n    this.router = router;\n    this.myValService = myValService;\n    this.totalPrice = 0;\n    this.commandLines = [];\n  }\n  ngOnInit() {\n    this.cartService.getCartCmdLinesFoods().subscribe({\n      next: data => {\n        this.commandLines = data;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    this.commandFormGroup = this.fb.group({\n      firstname: this.fb.control('', Validators.required),\n      lastname: ['', [Validators.required]],\n      bithdate: ['', [Validators.required]],\n      email: ['', [Validators.email, Validators.required]],\n      country: ['', [Validators.required]],\n      region: ['', [Validators.required]],\n      address: ['', [Validators.required]]\n    });\n  }\n  handleCommandClicked() {\n    let firstname = this.commandFormGroup.value.firstname;\n    let lastname = this.commandFormGroup.value.lastname;\n    let bithdate = this.commandFormGroup.value.bithdate;\n    let email = this.commandFormGroup.value.email;\n    let country = this.commandFormGroup.value.country;\n    let region = this.commandFormGroup.value.region;\n    let address = this.commandFormGroup.value.address;\n    let customer = {\n      customerId: \"\",\n      firstname: firstname,\n      lastname: lastname,\n      age: 10,\n      email: email,\n      country: country,\n      region: region,\n      address: address\n    };\n    /* this.commandFoods.forEach(element => {\r\n      let commandLine: CommandLine = {\r\n        food: element,\r\n        quantity: 1,\r\n        totalPrice: element.price\r\n      }\r\n      this.commandLines.push(commandLine);\r\n    }); */\n    let command = {\n      commandId: \"\",\n      totalCommandPrice: 0,\n      customer: customer,\n      commandDate: \"\",\n      lastModifiedDate: \"\",\n      commandStatus: \"\"\n    };\n    this.cmdService.addCommand(command).subscribe({\n      next: data => {\n        console.log(data);\n        this.router.navigateByUrl(\"/client/command_success\");\n      }\n    });\n  }\n  setCommandPassed() {}\n}\nCommandComponent.ɵfac = function CommandComponent_Factory(t) {\n  return new (t || CommandComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.CommandService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.MyValidatorsService));\n};\nCommandComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CommandComponent,\n  selectors: [[\"app-command\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[\"errors\", \"\"], [\"class\", \"card mt-5\", 4, \"ngIf\", \"ngIfElse\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"text-white\"], [1, \"card\", \"mt-5\"], [1, \"card-body\", \"col-md-12\"], [1, \"row\"], [1, \"col-md-6\"], [\"class\", \"card\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"firstname\", 1, \"form-label\"], [\"formControlName\", \"firstname\", \"type\", \"text\", \"id\", \"firstname\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"lastname\", 1, \"form-label\"], [\"formControlName\", \"lastname\", \"type\", \"text\", \"id\", \"lastname\", 1, \"form-control\"], [\"for\", \"age\", 1, \"form-label\"], [\"formControlName\", \"bithdate\", \"type\", \"date\", \"id\", \"age\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"email\", 1, \"form-control\"], [\"for\", \"country\", 1, \"form-label\"], [\"formControlName\", \"country\", \"type\", \"text\", \"id\", \"country\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"region\", 1, \"form-label\"], [\"formControlName\", \"region\", \"type\", \"text\", \"id\", \"region\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"address\", 1, \"form-label\"], [\"formControlName\", \"address\", \"type\", \"text\", \"id\", \"address\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", 3, \"disabled\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function CommandComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CommandComponent_ng_template_0_Template, 9, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, CommandComponent_div_2_Template, 55, 10, \"div\", 1);\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.commandLines)(\"ngIfElse\", _r0);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","CommandComponent","constructor","cartService","fb","cmdService","router","myValService","ngOnInit","getCartCmdLinesFoods","subscribe","next","data","commandLines","error","err","console","log","commandFormGroup","group","firstname","control","required","lastname","bithdate","email","country","region","address","handleCommandClicked","value","customer","customerId","age","command","commandId","totalCommandPrice","commandDate","lastModifiedDate","commandStatus","addCommand","navigateByUrl","setCommandPassed","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\PROJETS\\PPP - 2023_2024\\FreshFoodsOnline\\src\\app\\module-client\\command\\command.component.ts","D:\\PROJETS\\PPP - 2023_2024\\FreshFoodsOnline\\src\\app\\module-client\\command\\command.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport {Food} from 'src/app/shared/model/food';\r\nimport { Command } from '../../shared/model/command';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Customer } from 'src/app/shared/model/customer';\r\nimport { CommandLine } from 'src/app/shared/model/command-line';\r\nimport { CommandService } from '../../services/command.service';\r\nimport { Router } from '@angular/router';\r\nimport { MyValidatorsService } from 'src/app/services/my-validators.service';\r\n\r\n@Component({\r\n  selector: 'app-command',\r\n  templateUrl: './command.component.html',\r\n  styleUrls: ['./command.component.scss']\r\n})\r\nexport class CommandComponent implements OnInit{\r\n\r\n  public commandFoods!: Food[];\r\n  public errorMessage!: string;\r\n  public totalPrice: number = 0;\r\n\r\n  public commandLines: CommandLine[] = [];\r\n\r\n  public commandFormGroup!: FormGroup;\r\n\r\n  constructor(private cartService: CartService,\r\n    private fb: FormBuilder,\r\n    private cmdService: CommandService,\r\n    private router: Router,\r\n    public myValService: MyValidatorsService){\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cartService.getCartCmdLinesFoods().subscribe({\r\n      next: data => {\r\n        this.commandLines = data;\r\n      },\r\n      error: err => {\r\n        console.log(err);\r\n      }\r\n    })\r\n\r\n    this.commandFormGroup = this.fb.group({\r\n      firstname: this.fb.control('', Validators.required),\r\n      lastname: ['', [Validators.required]],\r\n      bithdate: ['', [Validators.required]],\r\n      email: ['', [Validators.email, Validators.required]],\r\n      country: ['', [Validators.required]],\r\n      region: ['', [Validators.required]],\r\n      address: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  public handleCommandClicked(){\r\n    let firstname = this.commandFormGroup.value.firstname;\r\n    let lastname = this.commandFormGroup.value.lastname;\r\n    let bithdate = this.commandFormGroup.value.bithdate;\r\n    let email = this.commandFormGroup.value.email;\r\n    let country = this.commandFormGroup.value.country;\r\n    let region = this.commandFormGroup.value.region;\r\n    let address = this.commandFormGroup.value.address;\r\n\r\n    let customer: Customer = {\r\n      customerId: \"\",\r\n      firstname: firstname,\r\n      lastname: lastname,\r\n      age: 10,\r\n      email: email,\r\n      country: country,\r\n      region: region,\r\n      address: address\r\n    }\r\n\r\n    /* this.commandFoods.forEach(element => {\r\n      let commandLine: CommandLine = {\r\n        food: element,\r\n        quantity: 1,\r\n        totalPrice: element.price\r\n      }\r\n      this.commandLines.push(commandLine);\r\n    }); */\r\n\r\n    let command: Command = {\r\n      commandId: \"\",\r\n      totalCommandPrice: 0,\r\n      customer: customer,\r\n      commandDate: \"\",\r\n      lastModifiedDate: \"\",\r\n      commandStatus: \"\"\r\n    }\r\n\r\n    this.cmdService.addCommand(command).subscribe({\r\n      next: data => {\r\n        console.log(data);\r\n        this.router.navigateByUrl(\"/client/command_success\");\r\n      }\r\n    });\r\n  }\r\n\r\n  public setCommandPassed(){\r\n\r\n  }\r\n\r\n}\r\n","<ng-template #errors>\r\n    <br>\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            <h3>WARNING</h3>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"text-white\">\r\n                <h4>{{ errorMessage }}</h4>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<div class=\"card mt-5\" *ngIf=\"commandLines ; else errors\">\r\n    <div class=\"card-header\">\r\n        <h5>COMPLETE YOUR COMMAND</h5>\r\n    </div>\r\n    <div class=\"card-body col-md-12\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div>\r\n                    <div class=\"card\" *ngIf=\"commandLines\">\r\n                        <div class=\"card-header\">\r\n                            <h6>Your Command List</h6>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <table class=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Quatity</th>\r\n                                        <th>Total Price</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let cmdLines of commandLines\">\r\n                                        <td> {{ cmdLines.product.name }} </td>\r\n                                        <td> {{ cmdLines.quantity}} </td>\r\n                                        <td> {{ cmdLines.totalCommandLinePrice }} FCFA</td>\r\n                                    </tr>\r\n                                    <br>\r\n                                    <tr *ngIf=\"commandLines\">\r\n                                        <td><h5>Total Price</h5></td>\r\n                                        <td><h5>{{totalPrice}}</h5></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            <h6>Please complete this form !</h6>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <form [formGroup]=\"commandFormGroup\" (ngSubmit)=\"handleCommandClicked()\">\r\n                                <div class=\"mb-3\">\r\n                                    <label for=\"firstname\" class=\"form-label\">F. Name</label>\r\n                                    <input class=\"form-control\" formControlName=\"firstname\" type=\"text\" id=\"firstname\">\r\n                                    <small *ngIf=\"commandFormGroup.controls['firstname'].errors && commandFormGroup.controls['firstname'].touched\" class=\"text-danger\">\r\n                                        {{ myValService.getValidatorErrorMessage('F. Name', commandFormGroup.controls['firstname'].errors) }}\r\n                                    </small>\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label for=\"lastname\" class=\"form-label\">L. Name</label>\r\n                                    <input class=\"form-control\" formControlName=\"lastname\" type=\"text\" id=\"lastname\">\r\n                                    <small *ngIf=\"commandFormGroup.controls['lastname'].errors && commandFormGroup.controls['lastname'].touched\" class=\"text-danger\">\r\n                                        {{ myValService.getValidatorErrorMessage('L. Name', commandFormGroup.controls['lastname'].errors) }}\r\n                                    </small>\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label for=\"age\" class=\"form-label\">Bith date</label>\r\n                                    <input class=\"form-control\" formControlName=\"bithdate\" type=\"date\" id=\"age\">\r\n                                    <small *ngIf=\"commandFormGroup.controls['bithdate'].errors && commandFormGroup.controls['bithdate'].touched\" class=\"text-danger\">\r\n                                        {{ myValService.getValidatorErrorMessage('Bith date', commandFormGroup.controls['bithdate'].errors) }}\r\n                                    </small>\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label for=\"email\" class=\"form-label\">Email</label>\r\n                                    <input class=\"form-control\" formControlName=\"email\" type=\"email\" id=\"email\">\r\n                                    <small *ngIf=\"commandFormGroup.controls['email'].errors && commandFormGroup.controls['email'].touched\" class=\"text-danger\">\r\n                                        {{ myValService.getValidatorErrorMessage('Email', commandFormGroup.controls['email'].errors) }}\r\n                                    </small>\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label for=\"country\" class=\"form-label\">Country</label>\r\n                                    <input class=\"form-control\" formControlName=\"country\" type=\"text\" id=\"country\" required>\r\n                                    <small *ngIf=\"commandFormGroup.controls['country'].errors && commandFormGroup.controls['country'].touched\" class=\"text-danger\">\r\n                                        {{ myValService.getValidatorErrorMessage('Country', commandFormGroup.controls['country'].errors) }}\r\n                                    </small>\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label for=\"region\" class=\"form-label\">Region</label>\r\n                                    <input class=\"form-control\" formControlName=\"region\" type=\"text\" id=\"region\" required>\r\n                                    <small *ngIf=\"commandFormGroup.controls['region'].errors && commandFormGroup.controls['region'].touched\" class=\"text-danger\">\r\n                                        {{ myValService.getValidatorErrorMessage('Region', commandFormGroup.controls['region'].errors) }}\r\n                                    </small>\r\n                                </div>\r\n                                <div class=\"mb-3\">\r\n                                    <label for=\"address\" class=\"form-label\">Address</label>\r\n                                    <input class=\"form-control\" formControlName=\"address\" type=\"text\" id=\"address\">\r\n                                    <small *ngIf=\"commandFormGroup.controls['address'].errors && commandFormGroup.controls['address'].touched\" class=\"text-danger\">\r\n                                        {{ myValService.getValidatorErrorMessage('Address', commandFormGroup.controls['address'].errors) }}\r\n                                    </small>\r\n                                </div>\r\n                                <button [disabled]=\"!this.commandFormGroup.valid\" type=\"submit\" class=\"btn btn-info\">\r\n                                    <strong>COMMAND</strong>\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}