{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/command.service\";\nimport * as i2 from \"@angular/router\";\nexport class CommandGuard {\n  constructor(cmdService, router) {\n    this.cmdService = cmdService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    let commandPassed = this.cmdService.isCommandPassed();\n    if (commandPassed == false) {\n      this.router.navigateByUrl(\"/client/food\");\n      return false;\n    }\n    return true;\n  }\n}\nCommandGuard.ɵfac = function CommandGuard_Factory(t) {\n  return new (t || CommandGuard)(i0.ɵɵinject(i1.CommandService), i0.ɵɵinject(i2.Router));\n};\nCommandGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommandGuard,\n  factory: CommandGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,UAA0B,EACpCC,MAAc;IADJ,eAAU,GAAVD,UAAU;IACpB,WAAM,GAANC,MAAM;EAAU;EAE1BC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IACxB,IAAIC,aAAa,GAAG,IAAI,CAACL,UAAU,CAACM,eAAe,EAAE;IACrD,IAAID,aAAa,IAAI,KAAK,EAAE;MAC1B,IAAI,CAACJ,MAAM,CAACM,aAAa,CAAC,cAAc,CAAC;MACzC,OAAO,KAAK;;IAEhB,OAAO,IAAI;EACb;;AAdWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAU,SAAZV,YAAY;EAAAW,YAFX;AAAM","names":["CommandGuard","constructor","cmdService","router","canActivate","route","state","commandPassed","isCommandPassed","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["D:\\ESIG GLOBAL SUCCESS - PARCOURS\\ESIG LICENCE 2 - Génie Logiciel\\ESIG Licence 2 - SEMESTRE 4\\Licence 2 - Complement Web\\TRAVAIL DE M. AGBO - COMPLEMENT DEVELOPPEMENT\\FreshFoodsOnline\\src\\app\\module-client\\client-guards\\command.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CommandService } from 'src/app/services/command.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommandGuard implements CanActivate {\n\n  constructor(private cmdService: CommandService,\n    private router: Router){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      let commandPassed = this.cmdService.isCommandPassed();\n      if (commandPassed == false) {\n        this.router.navigateByUrl(\"/client/food\");\n        return false;\n      }\n    return true;\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}