{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CommandComponent = class CommandComponent {\n  constructor(cartService, fb, cmdService, router) {\n    this.cartService = cartService;\n    this.fb = fb;\n    this.cmdService = cmdService;\n    this.router = router;\n    this.totalPrice = 0;\n    this.commandLines = [];\n  }\n  ngOnInit() {\n    this.cartService.getCartFoods().subscribe({\n      next: data => {\n        this.commandFoods = data;\n        this.commandFoods.forEach(f => {\n          this.totalPrice += f.price;\n        });\n        console.log(\"Mes foods \", this.commandFoods);\n      },\n      error: err => {\n        this.errorMessage = err;\n        console.log(\"Une erreur\", err);\n      }\n    });\n    this.commandFormGroup = this.fb.group({\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      bithdate: ['', [Validators.required]],\n      email: ['', [Validators.email, Validators.required]],\n      country: ['', [Validators.required]],\n      region: ['', [Validators.required]],\n      address: ['', [Validators.required]]\n    });\n  }\n  handleCommandClicked() {\n    let firstname = this.commandFormGroup.value.firstname;\n    let lastname = this.commandFormGroup.value.lastname;\n    let bithdate = this.commandFormGroup.value.bithdate;\n    let email = this.commandFormGroup.value.email;\n    let country = this.commandFormGroup.value.country;\n    let region = this.commandFormGroup.value.region;\n    let address = this.commandFormGroup.value.address;\n    let client = {\n      firstname: firstname,\n      lastname: lastname,\n      bithdate: bithdate,\n      email: email,\n      country: country,\n      region: region,\n      address: address\n    };\n    this.commandFoods.forEach(element => {\n      let commandLine = {\n        food: element,\n        quantity: 1,\n        totalPrice: element.price\n      };\n      this.commandLines.push(commandLine);\n    });\n    let command = {\n      client: client,\n      commands: this.commandLines,\n      date: new Date()\n    };\n    this.cmdService.addCommand(command).subscribe({\n      next: data => {\n        console.log(data);\n        this.router.navigateByUrl(\"/client/command_success\");\n      }\n    });\n  }\n};\nCommandComponent = __decorate([Component({\n  selector: 'app-command',\n  templateUrl: './command.component.html',\n  styleUrls: ['./command.component.scss']\n})], CommandComponent);\nexport { CommandComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","CommandComponent","constructor","cartService","fb","cmdService","router","ngOnInit","getCartFoods","subscribe","next","data","commandFoods","forEach","f","totalPrice","price","console","log","error","err","errorMessage","commandFormGroup","group","firstname","required","lastname","bithdate","email","country","region","address","handleCommandClicked","value","client","element","commandLine","food","quantity","commandLines","push","command","commands","date","Date","addCommand","navigateByUrl","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\ESIG GLOBAL SUCCESS - PARCOURS\\ESIG LICENCE 2 - GÃ©nie Logiciel\\ESIG Licence 2 - SEMESTRE 4\\Licence 2 - Complement Web\\TRAVAIL DE M. AGBO - COMPLEMENT DEVELOPPEMENT\\FreshFoodsOnline\\src\\app\\module-client\\command\\command.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/app/services/cart.service';\nimport { Foods } from 'src/app/shared/model/food';\nimport { Command } from '../../shared/model/command';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Client } from 'src/app/shared/model/client';\nimport { CommandLine } from 'src/app/shared/model/command-line';\nimport { CommandService } from '../../services/command.service';\nimport { Router } from '@angular/router';\nimport { tick } from '@angular/core/testing';\n\n@Component({\n  selector: 'app-command',\n  templateUrl: './command.component.html',\n  styleUrls: ['./command.component.scss']\n})\nexport class CommandComponent implements OnInit{\n\n  public commandFoods!: Foods[];\n  public errorMessage!: string;\n  public totalPrice: number = 0;\n  \n  private commandLines: CommandLine[] = [];\n\n  public commandFormGroup!: FormGroup;\n\n  constructor(private cartService: CartService,\n    private fb: FormBuilder,\n    private cmdService: CommandService,\n    private router: Router){\n  }\n\n  ngOnInit(): void {\n    this.cartService.getCartFoods().subscribe({\n      next: data => {\n        this.commandFoods = data;\n        this.commandFoods.forEach(f =>{\n          this.totalPrice += f.price;\n        })\n        console.log(\"Mes foods \", this.commandFoods)\n      },\n      error: err => {\n        this.errorMessage = err;\n        console.log(\"Une erreur\",err);\n      }\n    });\n\n    this.commandFormGroup = this.fb.group({\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      bithdate: ['', [Validators.required]],\n      email: ['', [Validators.email, Validators.required]],\n      country: ['', [Validators.required]],\n      region: ['', [Validators.required]],\n      address: ['', [Validators.required]]\n    });\n  }\n\n  public handleCommandClicked(){\n    let firstname = this.commandFormGroup.value.firstname;\n    let lastname = this.commandFormGroup.value.lastname;\n    let bithdate = this.commandFormGroup.value.bithdate;\n    let email = this.commandFormGroup.value.email;\n    let country = this.commandFormGroup.value.country;\n    let region = this.commandFormGroup.value.region;\n    let address = this.commandFormGroup.value.address;\n\n    let client: Client = {\n      firstname: firstname,\n      lastname: lastname,\n      bithdate: bithdate,\n      email: email,\n      country: country,\n      region: region,\n      address: address\n    }\n\n    this.commandFoods.forEach(element => {\n      let commandLine: CommandLine = {\n        food: element,\n        quantity: 1,\n        totalPrice: element.price\n      }\n      this.commandLines.push(commandLine);\n    });\n\n    let command: Command = {\n      client: client,\n      commands: this.commandLines,\n      date: new Date()\n    }\n\n    this.cmdService.addCommand(command).subscribe({\n      next: data => {\n        console.log(data);\n        this.router.navigateByUrl(\"/client/command_success\");\n      }\n    });\n    \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}