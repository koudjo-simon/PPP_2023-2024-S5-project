{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/cart.service\";\nimport * as i2 from \"@angular/router\";\nexport class CartGuard {\n  constructor(cartService, router) {\n    this.cartService = cartService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.cartService.cardContainAddFoods() == false) {\n      this.router.navigateByUrl(\"/client/food\");\n    }\n    return true;\n  }\n}\nCartGuard.ɵfac = function CartGuard_Factory(t) {\n  return new (t || CartGuard)(i0.ɵɵinject(i1.CartService), i0.ɵɵinject(i2.Router));\n};\nCartGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartGuard,\n  factory: CartGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,WAAwB,EAClCC,MAAc;IADJ,gBAAW,GAAXD,WAAW;IACrB,WAAM,GAANC,MAAM;EAAU;EAE1BC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IACxB,IAAI,IAAI,CAACJ,WAAW,CAACK,mBAAmB,EAAE,IAAI,KAAK,EAAE;MACnD,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,cAAc,CAAC;;IAE7C,OAAO,IAAI;EACb;;AAZWR,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAS,SAATT,SAAS;EAAAU,YAFR;AAAM","names":["CartGuard","constructor","cartService","router","canActivate","route","state","cardContainAddFoods","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["D:\\ESIG GLOBAL SUCCESS - PARCOURS\\ESIG LICENCE 2 - Génie Logiciel\\ESIG Licence 2 - SEMESTRE 4\\Licence 2 - Complement Web\\TRAVAIL DE M. AGBO - COMPLEMENT DEVELOPPEMENT\\MyWork\\FreshFoodsOnline\\src\\app\\module-client\\client-guards\\cart.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CartService } from 'src/app/services/cart.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartGuard implements CanActivate {\n\n  constructor(private cartService: CartService,\n    private router: Router){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if (this.cartService.cardContainAddFoods() == false) {\n        this.router.navigateByUrl(\"/client/food\");\n      }\n    return true;\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}