{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/cart.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../services/command.service\";\nimport * as i4 from \"@angular/common\";\nfunction CommandComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"br\");\n    i0.ɵɵelementStart(1, \"div\", 2)(2, \"div\", 3)(3, \"h3\");\n    i0.ɵɵtext(4, \"WARNING\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"h4\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nfunction CommandComponent_div_2_div_8_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4, \"1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const f_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", f_r5.name, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", f_r5.price, \" FCFA\");\n  }\n}\nfunction CommandComponent_div_2_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"h6\");\n    i0.ɵɵtext(3, \"Your Command List\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 4)(5, \"table\", 29)(6, \"thead\")(7, \"tr\")(8, \"th\");\n    i0.ɵɵtext(9, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Quatity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Total Price\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, CommandComponent_div_2_div_8_tr_15_Template, 7, 2, \"tr\", 30);\n    i0.ɵɵelement(16, \"br\");\n    i0.ɵɵelementStart(17, \"tr\")(18, \"td\")(19, \"h5\");\n    i0.ɵɵtext(20, \"Total Price\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"td\")(22, \"h5\");\n    i0.ɵɵtext(23, \"100 FCFA\");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.commandFoods);\n  }\n}\nfunction CommandComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 3)(2, \"h5\");\n    i0.ɵɵtext(3, \"COMPLETE YOUR COMMAND\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 7)(5, \"div\", 8)(6, \"div\", 9)(7, \"div\");\n    i0.ɵɵtemplate(8, CommandComponent_div_2_div_8_Template, 24, 1, \"div\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 9)(10, \"div\")(11, \"div\", 11)(12, \"div\", 3)(13, \"h6\");\n    i0.ɵɵtext(14, \"Please complete this form !\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 4)(16, \"form\", 12);\n    i0.ɵɵlistener(\"ngSubmit\", function CommandComponent_div_2_Template_form_ngSubmit_16_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.handleCommandClicked());\n    });\n    i0.ɵɵelementStart(17, \"div\", 13)(18, \"label\", 14);\n    i0.ɵɵtext(19, \"F. Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 13)(22, \"label\", 16);\n    i0.ɵɵtext(23, \"L. Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 13)(26, \"label\", 18);\n    i0.ɵɵtext(27, \"Bith date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(28, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 13)(30, \"label\", 20);\n    i0.ɵɵtext(31, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(32, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"div\", 13)(34, \"label\", 22);\n    i0.ɵɵtext(35, \"Country\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(36, \"input\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"div\", 13)(38, \"label\", 24);\n    i0.ɵɵtext(39, \"Region\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(40, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"div\", 13)(42, \"label\", 26);\n    i0.ɵɵtext(43, \"Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(44, \"input\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"button\", 28)(46, \"strong\");\n    i0.ɵɵtext(47, \"COMMAND\");\n    i0.ɵɵelementEnd()()()()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.commandFoods);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.commandFormGroup);\n  }\n}\nexport class CommandComponent {\n  constructor(cartService, fb, cmdService) {\n    this.cartService = cartService;\n    this.fb = fb;\n    this.cmdService = cmdService;\n    this.commandLines = [];\n  }\n  ngOnInit() {\n    this.cartService.getCartFoods().subscribe({\n      next: data => this.commandFoods = data,\n      error: err => {\n        this.errorMessage = err;\n        console.log(err);\n      }\n    });\n    this.commandFormGroup = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      bithdate: ['', Validators.required],\n      email: ['', Validators.email, Validators.required],\n      country: ['', Validators.required],\n      region: ['', Validators.required],\n      address: ['', Validators.required]\n    });\n  }\n  handleCommandClicked() {\n    let firstname = this.commandFormGroup.value.firstname;\n    let lastname = this.commandFormGroup.value.lastname;\n    let bithdate = this.commandFormGroup.value.bithdate;\n    let email = this.commandFormGroup.value.email;\n    let country = this.commandFormGroup.value.country;\n    let region = this.commandFormGroup.value.region;\n    let address = this.commandFormGroup.value.address;\n    let client = {\n      firstname: firstname,\n      lastname: lastname,\n      bithdate: bithdate,\n      email: email,\n      country: country,\n      region: region,\n      address: address\n    };\n    this.commandFoods.forEach(element => {\n      let commandLine = {\n        food: element,\n        quantity: 1,\n        totalPrice: element.price\n      };\n      this.commandLines.push(commandLine);\n    });\n    let command = {\n      client: client,\n      commands: this.commandLines,\n      date: new Date()\n    };\n    this.cmdService.addCommand(cmd);\n  }\n}\nCommandComponent.ɵfac = function CommandComponent_Factory(t) {\n  return new (t || CommandComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.CommandService));\n};\nCommandComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CommandComponent,\n  selectors: [[\"app-command\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[\"errors\", \"\"], [\"class\", \"card mt-5\", 4, \"ngIf\", \"ngIfElse\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"text-white\"], [1, \"card\", \"mt-5\"], [1, \"card-body\", \"col-md-12\"], [1, \"row\"], [1, \"col-md-6\"], [\"class\", \"card\", 4, \"ngIf\"], [1, \"card\", 2, \"background-color\", \"rgba(167, 18, 18, 0.37)\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\", \"d-flex\"], [\"for\", \"firstname\", 1, \"form-label\", \"col-md-2\"], [\"formControlName\", \"firstname\", \"type\", \"text\", \"id\", \"firstname\", 1, \"form-control\"], [\"for\", \"lastname\", 1, \"form-label\", \"col-md-2\"], [\"formControlName\", \"lastname\", \"type\", \"text\", \"id\", \"lastname\", 1, \"form-control\"], [\"for\", \"age\", 1, \"form-label\", \"col-md-2\"], [\"formControlName\", \"bithdate\", \"type\", \"date\", \"id\", \"age\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\", \"col-md-2\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"email\", 1, \"form-control\"], [\"for\", \"country\", 1, \"form-label\", \"col-md-2\"], [\"formControlName\", \"country\", \"type\", \"text\", \"id\", \"country\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"region\", 1, \"form-label\", \"col-md-2\"], [\"formControlName\", \"region\", \"type\", \"text\", \"id\", \"region\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"address\", 1, \"form-label\", \"col-md-2\"], [\"formControlName\", \"address\", \"type\", \"text\", \"id\", \"address\", 1, \"form-control\"], [1, \"btn\", \"btn-info\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function CommandComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CommandComponent_ng_template_0_Template, 9, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, CommandComponent_div_2_Template, 48, 2, \"div\", 1);\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.commandFoods)(\"ngIfElse\", _r0);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".card[_ngcontent-%COMP%] {\\n  background-color: rgba(167, 18, 18, 0.37);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlLWNsaWVudC9jb21tYW5kL2NvbW1hbmQuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi8uLi8uLi8uLi9FU0lHJTIwR0xPQkFMJTIwU1VDQ0VTUyUyMC0lMjBQQVJDT1VSUy9FU0lHJTIwTElDRU5DRSUyMDIlMjAtJTIwRyVDMyVBOW5pZSUyMExvZ2ljaWVsL0VTSUclMjBMaWNlbmNlJTIwMiUyMC0lMjBTRU1FU1RSRSUyMDQvTGljZW5jZSUyMDIlMjAtJTIwQ29tcGxlbWVudCUyMFdlYi9UUkFWQUlMJTIwREUlMjBNLiUyMEFHQk8lMjAtJTIwQ09NUExFTUVOVCUyMERFVkVMT1BQRU1FTlQvRnJlc2hGb29kc09ubGluZS9zcmMvYXBwL21vZHVsZS1jbGllbnQvY29tbWFuZC9jb21tYW5kLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUNBQUE7QUNDSiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjcsIDE4LCAxOCwgMC4zNyk7XHJcbn0iLCIuY2FyZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTY3LCAxOCwgMTgsIDAuMzcpO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","CommandComponent","constructor","cartService","fb","cmdService","ngOnInit","getCartFoods","subscribe","next","data","commandFoods","error","err","errorMessage","console","log","commandFormGroup","group","firstname","required","lastname","bithdate","email","country","region","address","handleCommandClicked","value","client","forEach","element","commandLine","food","quantity","totalPrice","price","commandLines","push","command","commands","date","Date","addCommand","cmd","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\ESIG GLOBAL SUCCESS - PARCOURS\\ESIG LICENCE 2 - Génie Logiciel\\ESIG Licence 2 - SEMESTRE 4\\Licence 2 - Complement Web\\TRAVAIL DE M. AGBO - COMPLEMENT DEVELOPPEMENT\\FreshFoodsOnline\\src\\app\\module-client\\command\\command.component.ts","D:\\ESIG GLOBAL SUCCESS - PARCOURS\\ESIG LICENCE 2 - Génie Logiciel\\ESIG Licence 2 - SEMESTRE 4\\Licence 2 - Complement Web\\TRAVAIL DE M. AGBO - COMPLEMENT DEVELOPPEMENT\\FreshFoodsOnline\\src\\app\\module-client\\command\\command.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/app/services/cart.service';\nimport { Foods } from 'src/app/shared/model/food';\nimport { Command } from '../../shared/model/command';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Client } from 'src/app/shared/model/client';\nimport { CommandLine } from 'src/app/shared/model/command-line';\nimport { CommandService } from '../../services/command.service';\n\n@Component({\n  selector: 'app-command',\n  templateUrl: './command.component.html',\n  styleUrls: ['./command.component.scss']\n})\nexport class CommandComponent implements OnInit{\n\n  public commandFoods!: Foods[];\n  public errorMessage!: string;\n  \n  private commandLines: CommandLine[] = [];\n\n  public commandFormGroup!: FormGroup;\n\n  constructor(private cartService: CartService,\n    private fb: FormBuilder,\n    private cmdService: CommandService){\n\n  }\n\n  ngOnInit(): void {\n    this.cartService.getCartFoods().subscribe({\n      next: data => this.commandFoods = data,\n      error: err => {\n        this.errorMessage = err;\n        console.log(err);\n      }\n    });\n\n    this.commandFormGroup = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      bithdate: ['', Validators.required],\n      email: ['', Validators.email, Validators.required],\n      country: ['', Validators.required],\n      region: ['', Validators.required],\n      address: ['', Validators.required]\n    });\n  }\n\n  public handleCommandClicked(){\n    let firstname = this.commandFormGroup.value.firstname;\n    let lastname = this.commandFormGroup.value.lastname;\n    let bithdate = this.commandFormGroup.value.bithdate;\n    let email = this.commandFormGroup.value.email;\n    let country = this.commandFormGroup.value.country;\n    let region = this.commandFormGroup.value.region;\n    let address = this.commandFormGroup.value.address;\n\n    let client: Client = {\n      firstname: firstname,\n      lastname: lastname,\n      bithdate: bithdate,\n      email: email,\n      country: country,\n      region: region,\n      address: address\n    }\n\n    this.commandFoods.forEach(element => {\n      let commandLine: CommandLine = {\n        food: element,\n        quantity: 1,\n        totalPrice: element.price\n      }\n      this.commandLines.push(commandLine);\n    });\n\n    let command: Command = {\n      client: client,\n      commands: this.commandLines,\n      date: new Date()\n    }\n\n    this.cmdService.addCommand(cmd)\n\n  }\n\n}\n","<ng-template #errors>\n    <br>\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h3>WARNING</h3>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"text-white\">\n                <h4>{{ errorMessage }}</h4>\n            </div>\n        </div>\n    </div>\n</ng-template>\n<div class=\"card mt-5\" *ngIf=\"commandFoods ; else errors\">\n    <div class=\"card-header\">\n        <h5>COMPLETE YOUR COMMAND</h5>\n    </div>\n    <div class=\"card-body col-md-12\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div>\n                    <div class=\"card\" *ngIf=\"commandFoods\">\n                        <div class=\"card-header\">\n                            <h6>Your Command List</h6>\n                        </div>\n                        <div class=\"card-body\">\n                            <table class=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Quatity</th>\n                                        <th>Total Price</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let f of commandFoods\">\n                                        <td> {{ f.name }} </td>\n                                        <td>1</td>\n                                        <td> {{ f.price }} FCFA</td>\n                                    </tr>\n                                    <br>\n                                    <tr>\n                                        <td><h5>Total Price</h5></td>\n                                        <td><h5>100 FCFA</h5></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6\">\n                <div>\n                    <div class=\"card\" style=\"background-color: rgba(167, 18, 18, 0.37);\">\n                        <div class=\"card-header\">\n                            <h6>Please complete this form !</h6>\n                        </div>\n                        <div class=\"card-body\">\n                            <form [formGroup]=\"commandFormGroup\" (ngSubmit)=\"handleCommandClicked()\">\n                                <div class=\"mb-3 d-flex\">\n                                    <label for=\"firstname\" class=\"form-label col-md-2\">F. Name</label>\n                                    <input class=\"form-control\" formControlName=\"firstname\" type=\"text\" id=\"firstname\">\n                                </div>\n                                <div class=\"mb-3 d-flex\">\n                                    <label for=\"lastname\" class=\"form-label col-md-2\">L. Name</label>\n                                    <input class=\"form-control\" formControlName=\"lastname\" type=\"text\" id=\"lastname\">\n                                </div>\n                                <div class=\"mb-3 d-flex\">\n                                    <label for=\"age\" class=\"form-label col-md-2\">Bith date</label>\n                                    <input class=\"form-control\" formControlName=\"bithdate\" type=\"date\" id=\"age\">\n                                </div>\n                                <div class=\"mb-3 d-flex\">\n                                    <label for=\"email\" class=\"form-label col-md-2\">Email</label>\n                                    <input class=\"form-control\" formControlName=\"email\" type=\"email\" id=\"email\">\n                                </div>\n                                <div class=\"mb-3 d-flex\">\n                                    <label for=\"country\" class=\"form-label col-md-2\">Country</label>\n                                    <input class=\"form-control\" formControlName=\"country\" type=\"text\" id=\"country\" required>\n                                </div>\n                                <div class=\"mb-3 d-flex\">\n                                    <label for=\"region\" class=\"form-label col-md-2\">Region</label>\n                                    <input class=\"form-control\" formControlName=\"region\" type=\"text\" id=\"region\" required>\n                                </div>\n                                <div class=\"mb-3 d-flex\">\n                                    <label for=\"address\" class=\"form-label col-md-2\">Address</label>\n                                    <input class=\"form-control\" formControlName=\"address\" type=\"text\" id=\"address\">\n                                </div>\n                                <button class=\"btn btn-info\">\n                                    <strong>COMMAND</strong>\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>           \n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}